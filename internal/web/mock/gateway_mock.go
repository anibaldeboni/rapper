// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anibaldeboni/rapper/internal/web (interfaces: HttpGateway)
//
// Generated by this command:
//
//	mockgen -destination mock/gateway_mock.go github.com/anibaldeboni/rapper/internal/web HttpGateway
//

// Package mock_web is a generated GoMock package.
package mock_web

import (
	reflect "reflect"

	web "github.com/anibaldeboni/rapper/internal/web"
	gomock "go.uber.org/mock/gomock"
)

// MockHttpGateway is a mock of HttpGateway interface.
type MockHttpGateway struct {
	ctrl     *gomock.Controller
	recorder *MockHttpGatewayMockRecorder
}

// MockHttpGatewayMockRecorder is the mock recorder for MockHttpGateway.
type MockHttpGatewayMockRecorder struct {
	mock *MockHttpGateway
}

// NewMockHttpGateway creates a new mock instance.
func NewMockHttpGateway(ctrl *gomock.Controller) *MockHttpGateway {
	mock := &MockHttpGateway{ctrl: ctrl}
	mock.recorder = &MockHttpGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpGateway) EXPECT() *MockHttpGatewayMockRecorder {
	return m.recorder
}

// Exec mocks base method.
func (m *MockHttpGateway) Exec(arg0 map[string]string) (web.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exec", arg0)
	ret0, _ := ret[0].(web.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Exec indicates an expected call of Exec.
func (mr *MockHttpGatewayMockRecorder) Exec(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exec", reflect.TypeOf((*MockHttpGateway)(nil).Exec), arg0)
}
