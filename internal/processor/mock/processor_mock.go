// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anibaldeboni/rapper/internal/processor (interfaces: Processor)
//
// Generated by this command:
//
//	mockgen -destination mock/processor_mock.go github.com/anibaldeboni/rapper/internal/processor Processor
//

// Package mock_processor is a generated GoMock package.
package mock_processor

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockProcessor is a mock of Processor interface.
type MockProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorMockRecorder
}

// MockProcessorMockRecorder is the mock recorder for MockProcessor.
type MockProcessorMockRecorder struct {
	mock *MockProcessor
}

// NewMockProcessor creates a new mock instance.
func NewMockProcessor(ctrl *gomock.Controller) *MockProcessor {
	mock := &MockProcessor{ctrl: ctrl}
	mock.recorder = &MockProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessor) EXPECT() *MockProcessorMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockProcessor) Do(arg0 context.Context, arg1 func(), arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Do", arg0, arg1, arg2)
}

// Do indicates an expected call of Do.
func (mr *MockProcessorMockRecorder) Do(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockProcessor)(nil).Do), arg0, arg1, arg2)
}
